{"version":3,"sources":["components/Task.js","components/Tasks.js","components/Button.js","components/Header.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Task","task","onDelete","onToggle","className","reminder","onDoubleClick","id","text","style","color","cursor","onClick","day","Tasks","tasks","map","Button","backgroundColor","defaultProps","Header","title","onClickAdd","showAdd","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c6a4970.chunk.js","sourcesContent":["import { FaTimes } from 'react-icons/fa'\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)} >\n            <h3>{task.text}\n                <FaTimes style={{ color: 'red', cursor: 'pointer' }} onClick={() => onDelete(task.id)} />\n            </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n\n    return (\n        <>\n            {tasks.map((task) => (<Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />))}\n        </>\n    )\n}\n\nexport default Tasks\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n    return (\n        <button onClick={onClick} style={{ backgroundColor: color, }} className='btn'>{text}</button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue',\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n\n}\n\nexport default Button\n","import PropType from 'prop-types'\nimport Button from './Button'\nconst Header = ({ title, onClickAdd, showAdd }) => {\n    return (\n        <header className='header'>\n            <h1 >{title}</h1>\n            <Button onClick={onClickAdd} color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} />\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    \"title\": \"Task Trackder\"\n}\n\nHeader.propTypes = {\n    \"title\": PropType.string.isRequired,\n}\n//CSS styling in JSX\n// const headingStyle = {\n//     color: 'red',\n//     backgroundColor: 'black',\n// }\nexport default Header\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (!text) {\n            alert('Please add a task')\n            return\n        }\n        onAdd({ text, day, reminder })\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => { setText(e.target.value) }} />\n            </div>\n            <div className='form-control'>\n                <label>Day & Time </label>\n                <input type='text' placeholder='Add Day & Time' value={day} onChange={(e) => { setDay(e.target.value) }} />\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Reminder</label>\n                <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => { setReminder(e.currentTarget.checked) }} />\n\n            </div>\n            <input className=\"btn btn-block\" type=\"submit\" value=\"Save Task\" />\n        </form>\n    )\n}\n\nexport default AddTask\n","import Tasks from './components/Tasks'\nimport Header from \"./components/Header\"\nimport { useState } from 'react'\nimport AddTask from './components/AddTask';\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n      \"id\": 1,\n      \"text\": \"Doctors Appointment\",\n      \"day\": \"Feb 5th at 2:30pm\",\n      \"reminder\": true\n    },\n    {\n      \"id\": 2,\n      \"text\": \"Meeting at School\",\n      \"day\": \"Feb 6th at 1:30pm\",\n      \"reminder\": true\n    }\n  ]);\n  //Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 1000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  }\n\n  //delete task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter(task => task.id !== id))\n  }\n  //Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(tasks.map(task => task.id === id ? { ...task, reminder: !task.reminder } : task))\n  }\n  return (\n    <div className=\"container\">\n      <Header onClickAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> : \"There is no task\"}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}